name: VCMI - vcpkg XP prepare

on:
  workflow_dispatch:

jobs:
  prepare-xp:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - platform: msvc-x64-xp
            triplet: x64-windows-xp
          - platform: msvc-x86-xp
            triplet: x86-windows-xp

    steps:
      - name: Checkout vcpkg baseline
        uses: actions/checkout@v4
        with:
          repository: microsoft/vcpkg
          ref: 2021.05.12

      - name: Create XP triplets
        shell: bash
        run: |
          mkdir -p triplets
          cat <<EOF > triplets/x64-windows-xp.cmake
          set(VCPKG_TARGET_ARCHITECTURE x64)
          set(VCPKG_CRT_LINKAGE dynamic)
          set(VCPKG_LIBRARY_LINKAGE dynamic)
          set(VCPKG_PLATFORM_TOOLSET v141_xp)
          set(VCPKG_C_FLAGS "-D_WIN32_WINNT=0x0501 -DWINVER=0x0501")
          set(VCPKG_CXX_FLAGS "-D_WIN32_WINNT=0x0501 -DWINVER=0x0501")
          EOF

          cat <<EOF > triplets/x86-windows-xp.cmake
          set(VCPKG_TARGET_ARCHITECTURE x86)
          set(VCPKG_CRT_LINKAGE dynamic)
          set(VCPKG_LIBRARY_LINKAGE dynamic)
          set(VCPKG_PLATFORM_TOOLSET v141_xp)
          set(VCPKG_C_FLAGS "-D_WIN32_WINNT=0x0501 -DWINVER=0x0501")
          set(VCPKG_CXX_FLAGS "-D_WIN32_WINNT=0x0501 -DWINVER=0x0501")
          EOF

      - name: Prepare Boost overlay (Boost 1.72)
        shell: bash
        run: |
          mkdir -p vcmi-overlay
          git clone https://github.com/microsoft/vcpkg.git temp-vcpkg
          cd temp-vcpkg
          git checkout 7aebb481085de7387f8a9975652c26f9053f66df
          cp -r ports/boost vcmi-overlay/
          cd ..
          rm -rf temp-vcpkg
      
      - name: Prepare Qt5 overlay (Qt 5.6.3)
        shell: bash
        run: |
          git clone https://github.com/microsoft/vcpkg.git temp-vcpkg-qt
          cd temp-vcpkg-qt
          git checkout 7aebb481085de7387f8a9975652c26f9053f66df
          cp -r ports/qt5* ../vcmi-overlay/
          cd ..
          rm -rf temp-vcpkg-qt

      - name: Save package list
        shell: bash
        run: |
          cat <<EOF > package-list.txt
          yasm
          tbb
          fuzzylite
          sdl2
          sdl2-image
          sdl2-ttf
          sdl2-mixer[core,mpg123]
          qt5-base
          qt5-tools
          ffmpeg[core,avcodec,avformat,swresample,swscale]
          boost-filesystem
          boost-system
          boost-thread
          boost-program-options
          boost-locale
          boost-iostreams
          boost-headers
          boost-foreach
          boost-format
          boost-crc
          boost-logic
          boost-multi-array
          boost-ptr-container
          boost-heap
          boost-bimap
          boost-asio
          boost-stacktrace
          boost-assign
          boost-geometry
          boost-uuid
          boost-process
          EOF

      - name: Generate local build script
        shell: bash
        run: |
          cat <<'BAT' > build-xp.cmd
          @echo off
          setlocal
          echo.
          echo === VCMI Windows XP Dependencies Build ===
          echo.

          REM Locate Visual Studio 2019 vcvarsall.bat
          set VSPATH="C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Auxiliary\Build\vcvarsall.bat"
          if not exist %VSPATH% (
              echo ERROR: vcvarsall.bat not found at %VSPATH%
              pause
              exit /b 1
          )

          call %VSPATH% x64
          echo Bootstrapping vcpkg...
          call bootstrap-vcpkg.bat

          echo Building x64 XP packages...
          vcpkg.exe install @package-list.txt --triplet x64-windows-xp --overlay-ports=vcmi-overlay
          vcpkg.exe export @package-list.txt --raw --triplet x64-windows-xp --overlay-ports=vcmi-overlay --output=result/x64

          echo Building x86 XP packages...
          vcpkg.exe install @package-list.txt --triplet x86-windows-xp --overlay-ports=vcmi-overlay
          vcpkg.exe export @package-list.txt --raw --triplet x86-windows-xp --overlay-ports=vcmi-overlay --output=result/x86

          echo.
          echo === Build complete. Packages exported to result/ ===
          pause
          endlocal
          BAT

      - name: Package prepared vcpkg
        shell: bash
        run: |
          mkdir -p result
          tar --create --xz --file vcpkg-xp-${{ matrix.platform }}.txz \
            triplets vcmi-overlay package-list.txt build-xp.cmd scripts ports bootstrap-vcpkg.bat toolsrc

      - name: Upload prepared vcpkg
        uses: actions/upload-artifact@v4
        with:
          name: vcpkg-xp-${{ matrix.platform }}
          path: vcpkg-xp-${{ matrix.platform }}.txz
          compression-level: 0
